import * as z from "zod";
import * as components from "../components/index.js";
export type BadRequestErrorResponseData = {
    meta: components.Meta;
    error: components.BadRequestErrorDetails;
};
export declare class BadRequestErrorResponse extends Error {
    meta: components.Meta;
    error: components.BadRequestErrorDetails;
    /** The original data that was passed to this error instance. */
    data$: BadRequestErrorResponseData;
    constructor(err: BadRequestErrorResponseData);
}
/** @internal */
export declare const BadRequestErrorResponse$inboundSchema: z.ZodType<BadRequestErrorResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type BadRequestErrorResponse$Outbound = {
    meta: components.Meta$Outbound;
    error: components.BadRequestErrorDetails$Outbound;
};
/** @internal */
export declare const BadRequestErrorResponse$outboundSchema: z.ZodType<BadRequestErrorResponse$Outbound, z.ZodTypeDef, BadRequestErrorResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BadRequestErrorResponse$ {
    /** @deprecated use `BadRequestErrorResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BadRequestErrorResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `BadRequestErrorResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BadRequestErrorResponse$Outbound, z.ZodTypeDef, BadRequestErrorResponse>;
    /** @deprecated use `BadRequestErrorResponse$Outbound` instead. */
    type Outbound = BadRequestErrorResponse$Outbound;
}
//# sourceMappingURL=badrequesterrorresponse.d.ts.map