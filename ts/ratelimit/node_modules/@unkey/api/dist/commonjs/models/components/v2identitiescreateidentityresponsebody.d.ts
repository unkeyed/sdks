import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { IdentitiesCreateIdentityResponseData, IdentitiesCreateIdentityResponseData$Outbound } from "./identitiescreateidentityresponsedata.js";
import { Meta, Meta$Outbound } from "./meta.js";
export type V2IdentitiesCreateIdentityResponseBody = {
    meta: Meta;
    data: IdentitiesCreateIdentityResponseData;
};
/** @internal */
export declare const V2IdentitiesCreateIdentityResponseBody$inboundSchema: z.ZodType<V2IdentitiesCreateIdentityResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type V2IdentitiesCreateIdentityResponseBody$Outbound = {
    meta: Meta$Outbound;
    data: IdentitiesCreateIdentityResponseData$Outbound;
};
/** @internal */
export declare const V2IdentitiesCreateIdentityResponseBody$outboundSchema: z.ZodType<V2IdentitiesCreateIdentityResponseBody$Outbound, z.ZodTypeDef, V2IdentitiesCreateIdentityResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace V2IdentitiesCreateIdentityResponseBody$ {
    /** @deprecated use `V2IdentitiesCreateIdentityResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<V2IdentitiesCreateIdentityResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `V2IdentitiesCreateIdentityResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<V2IdentitiesCreateIdentityResponseBody$Outbound, z.ZodTypeDef, V2IdentitiesCreateIdentityResponseBody>;
    /** @deprecated use `V2IdentitiesCreateIdentityResponseBody$Outbound` instead. */
    type Outbound = V2IdentitiesCreateIdentityResponseBody$Outbound;
}
export declare function v2IdentitiesCreateIdentityResponseBodyToJSON(v2IdentitiesCreateIdentityResponseBody: V2IdentitiesCreateIdentityResponseBody): string;
export declare function v2IdentitiesCreateIdentityResponseBodyFromJSON(jsonString: string): SafeParseResult<V2IdentitiesCreateIdentityResponseBody, SDKValidationError>;
//# sourceMappingURL=v2identitiescreateidentityresponsebody.d.ts.map