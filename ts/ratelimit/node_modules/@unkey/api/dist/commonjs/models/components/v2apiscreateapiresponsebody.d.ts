import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ApisCreateApiResponseData, ApisCreateApiResponseData$Outbound } from "./apiscreateapiresponsedata.js";
import { Meta, Meta$Outbound } from "./meta.js";
export type V2ApisCreateApiResponseBody = {
    meta: Meta;
    data: ApisCreateApiResponseData;
};
/** @internal */
export declare const V2ApisCreateApiResponseBody$inboundSchema: z.ZodType<V2ApisCreateApiResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type V2ApisCreateApiResponseBody$Outbound = {
    meta: Meta$Outbound;
    data: ApisCreateApiResponseData$Outbound;
};
/** @internal */
export declare const V2ApisCreateApiResponseBody$outboundSchema: z.ZodType<V2ApisCreateApiResponseBody$Outbound, z.ZodTypeDef, V2ApisCreateApiResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace V2ApisCreateApiResponseBody$ {
    /** @deprecated use `V2ApisCreateApiResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<V2ApisCreateApiResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `V2ApisCreateApiResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<V2ApisCreateApiResponseBody$Outbound, z.ZodTypeDef, V2ApisCreateApiResponseBody>;
    /** @deprecated use `V2ApisCreateApiResponseBody$Outbound` instead. */
    type Outbound = V2ApisCreateApiResponseBody$Outbound;
}
export declare function v2ApisCreateApiResponseBodyToJSON(v2ApisCreateApiResponseBody: V2ApisCreateApiResponseBody): string;
export declare function v2ApisCreateApiResponseBodyFromJSON(jsonString: string): SafeParseResult<V2ApisCreateApiResponseBody, SDKValidationError>;
//# sourceMappingURL=v2apiscreateapiresponsebody.d.ts.map