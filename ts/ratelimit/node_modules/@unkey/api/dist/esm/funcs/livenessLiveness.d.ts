import { UnkeyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { APIError } from "../models/errors/apierror.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * Liveness check
 *
 * @remarks
 * This endpoint checks if the service is alive.
 */
export declare function livenessLiveness(client: UnkeyCore, options?: RequestOptions): APIPromise<Result<components.V2LivenessResponseBody, errors.PreconditionFailedErrorResponse | errors.InternalServerErrorResponse | APIError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=livenessLiveness.d.ts.map