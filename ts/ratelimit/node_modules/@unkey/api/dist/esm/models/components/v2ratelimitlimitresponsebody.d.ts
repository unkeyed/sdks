import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Meta, Meta$Outbound } from "./meta.js";
import { RatelimitLimitResponseData, RatelimitLimitResponseData$Outbound } from "./ratelimitlimitresponsedata.js";
export type V2RatelimitLimitResponseBody = {
    meta: Meta;
    data: RatelimitLimitResponseData;
};
/** @internal */
export declare const V2RatelimitLimitResponseBody$inboundSchema: z.ZodType<V2RatelimitLimitResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type V2RatelimitLimitResponseBody$Outbound = {
    meta: Meta$Outbound;
    data: RatelimitLimitResponseData$Outbound;
};
/** @internal */
export declare const V2RatelimitLimitResponseBody$outboundSchema: z.ZodType<V2RatelimitLimitResponseBody$Outbound, z.ZodTypeDef, V2RatelimitLimitResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace V2RatelimitLimitResponseBody$ {
    /** @deprecated use `V2RatelimitLimitResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<V2RatelimitLimitResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `V2RatelimitLimitResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<V2RatelimitLimitResponseBody$Outbound, z.ZodTypeDef, V2RatelimitLimitResponseBody>;
    /** @deprecated use `V2RatelimitLimitResponseBody$Outbound` instead. */
    type Outbound = V2RatelimitLimitResponseBody$Outbound;
}
export declare function v2RatelimitLimitResponseBodyToJSON(v2RatelimitLimitResponseBody: V2RatelimitLimitResponseBody): string;
export declare function v2RatelimitLimitResponseBodyFromJSON(jsonString: string): SafeParseResult<V2RatelimitLimitResponseBody, SDKValidationError>;
//# sourceMappingURL=v2ratelimitlimitresponsebody.d.ts.map