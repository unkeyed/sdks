import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type V2ApisCreateApiRequestBody = {
    /**
     * The name for your API. This is not customer facing.
     */
    name: string;
};
/** @internal */
export declare const V2ApisCreateApiRequestBody$inboundSchema: z.ZodType<V2ApisCreateApiRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type V2ApisCreateApiRequestBody$Outbound = {
    name: string;
};
/** @internal */
export declare const V2ApisCreateApiRequestBody$outboundSchema: z.ZodType<V2ApisCreateApiRequestBody$Outbound, z.ZodTypeDef, V2ApisCreateApiRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace V2ApisCreateApiRequestBody$ {
    /** @deprecated use `V2ApisCreateApiRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<V2ApisCreateApiRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `V2ApisCreateApiRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<V2ApisCreateApiRequestBody$Outbound, z.ZodTypeDef, V2ApisCreateApiRequestBody>;
    /** @deprecated use `V2ApisCreateApiRequestBody$Outbound` instead. */
    type Outbound = V2ApisCreateApiRequestBody$Outbound;
}
export declare function v2ApisCreateApiRequestBodyToJSON(v2ApisCreateApiRequestBody: V2ApisCreateApiRequestBody): string;
export declare function v2ApisCreateApiRequestBodyFromJSON(jsonString: string): SafeParseResult<V2ApisCreateApiRequestBody, SDKValidationError>;
//# sourceMappingURL=v2apiscreateapirequestbody.d.ts.map