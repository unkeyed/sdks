/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const V2RatelimitLimitRequestBody$inboundSchema = z.object({
    namespace: z.string(),
    cost: z.number().int().default(1),
    duration: z.number().int(),
    identifier: z.string(),
    limit: z.number().int(),
});
/** @internal */
export const V2RatelimitLimitRequestBody$outboundSchema = z.object({
    namespace: z.string(),
    cost: z.number().int().default(1),
    duration: z.number().int(),
    identifier: z.string(),
    limit: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var V2RatelimitLimitRequestBody$;
(function (V2RatelimitLimitRequestBody$) {
    /** @deprecated use `V2RatelimitLimitRequestBody$inboundSchema` instead. */
    V2RatelimitLimitRequestBody$.inboundSchema = V2RatelimitLimitRequestBody$inboundSchema;
    /** @deprecated use `V2RatelimitLimitRequestBody$outboundSchema` instead. */
    V2RatelimitLimitRequestBody$.outboundSchema = V2RatelimitLimitRequestBody$outboundSchema;
})(V2RatelimitLimitRequestBody$ || (V2RatelimitLimitRequestBody$ = {}));
export function v2RatelimitLimitRequestBodyToJSON(v2RatelimitLimitRequestBody) {
    return JSON.stringify(V2RatelimitLimitRequestBody$outboundSchema.parse(v2RatelimitLimitRequestBody));
}
export function v2RatelimitLimitRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => V2RatelimitLimitRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'V2RatelimitLimitRequestBody' from JSON`);
}
//# sourceMappingURL=v2ratelimitlimitrequestbody.js.map