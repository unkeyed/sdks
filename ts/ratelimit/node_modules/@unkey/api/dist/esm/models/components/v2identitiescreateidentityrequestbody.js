/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { V2Ratelimit$inboundSchema, V2Ratelimit$outboundSchema, } from "./v2ratelimit.js";
/** @internal */
export const V2IdentitiesCreateIdentityRequestBodyMeta$inboundSchema = z.object({});
/** @internal */
export const V2IdentitiesCreateIdentityRequestBodyMeta$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var V2IdentitiesCreateIdentityRequestBodyMeta$;
(function (V2IdentitiesCreateIdentityRequestBodyMeta$) {
    /** @deprecated use `V2IdentitiesCreateIdentityRequestBodyMeta$inboundSchema` instead. */
    V2IdentitiesCreateIdentityRequestBodyMeta$.inboundSchema = V2IdentitiesCreateIdentityRequestBodyMeta$inboundSchema;
    /** @deprecated use `V2IdentitiesCreateIdentityRequestBodyMeta$outboundSchema` instead. */
    V2IdentitiesCreateIdentityRequestBodyMeta$.outboundSchema = V2IdentitiesCreateIdentityRequestBodyMeta$outboundSchema;
})(V2IdentitiesCreateIdentityRequestBodyMeta$ || (V2IdentitiesCreateIdentityRequestBodyMeta$ = {}));
export function v2IdentitiesCreateIdentityRequestBodyMetaToJSON(v2IdentitiesCreateIdentityRequestBodyMeta) {
    return JSON.stringify(V2IdentitiesCreateIdentityRequestBodyMeta$outboundSchema.parse(v2IdentitiesCreateIdentityRequestBodyMeta));
}
export function v2IdentitiesCreateIdentityRequestBodyMetaFromJSON(jsonString) {
    return safeParse(jsonString, (x) => V2IdentitiesCreateIdentityRequestBodyMeta$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'V2IdentitiesCreateIdentityRequestBodyMeta' from JSON`);
}
/** @internal */
export const V2IdentitiesCreateIdentityRequestBody$inboundSchema = z.object({
    externalId: z.string(),
    meta: z.lazy(() => V2IdentitiesCreateIdentityRequestBodyMeta$inboundSchema)
        .optional(),
    ratelimits: z.array(V2Ratelimit$inboundSchema).optional(),
});
/** @internal */
export const V2IdentitiesCreateIdentityRequestBody$outboundSchema = z.object({
    externalId: z.string(),
    meta: z.lazy(() => V2IdentitiesCreateIdentityRequestBodyMeta$outboundSchema)
        .optional(),
    ratelimits: z.array(V2Ratelimit$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var V2IdentitiesCreateIdentityRequestBody$;
(function (V2IdentitiesCreateIdentityRequestBody$) {
    /** @deprecated use `V2IdentitiesCreateIdentityRequestBody$inboundSchema` instead. */
    V2IdentitiesCreateIdentityRequestBody$.inboundSchema = V2IdentitiesCreateIdentityRequestBody$inboundSchema;
    /** @deprecated use `V2IdentitiesCreateIdentityRequestBody$outboundSchema` instead. */
    V2IdentitiesCreateIdentityRequestBody$.outboundSchema = V2IdentitiesCreateIdentityRequestBody$outboundSchema;
})(V2IdentitiesCreateIdentityRequestBody$ || (V2IdentitiesCreateIdentityRequestBody$ = {}));
export function v2IdentitiesCreateIdentityRequestBodyToJSON(v2IdentitiesCreateIdentityRequestBody) {
    return JSON.stringify(V2IdentitiesCreateIdentityRequestBody$outboundSchema.parse(v2IdentitiesCreateIdentityRequestBody));
}
export function v2IdentitiesCreateIdentityRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => V2IdentitiesCreateIdentityRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'V2IdentitiesCreateIdentityRequestBody' from JSON`);
}
//# sourceMappingURL=v2identitiescreateidentityrequestbody.js.map