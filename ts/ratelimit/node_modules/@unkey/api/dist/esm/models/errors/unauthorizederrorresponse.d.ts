import * as z from "zod";
import * as components from "../components/index.js";
export type UnauthorizedErrorResponseData = {
    meta: components.Meta;
    error: components.BaseError;
};
export declare class UnauthorizedErrorResponse extends Error {
    meta: components.Meta;
    error: components.BaseError;
    /** The original data that was passed to this error instance. */
    data$: UnauthorizedErrorResponseData;
    constructor(err: UnauthorizedErrorResponseData);
}
/** @internal */
export declare const UnauthorizedErrorResponse$inboundSchema: z.ZodType<UnauthorizedErrorResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UnauthorizedErrorResponse$Outbound = {
    meta: components.Meta$Outbound;
    error: components.BaseError$Outbound;
};
/** @internal */
export declare const UnauthorizedErrorResponse$outboundSchema: z.ZodType<UnauthorizedErrorResponse$Outbound, z.ZodTypeDef, UnauthorizedErrorResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UnauthorizedErrorResponse$ {
    /** @deprecated use `UnauthorizedErrorResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UnauthorizedErrorResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UnauthorizedErrorResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UnauthorizedErrorResponse$Outbound, z.ZodTypeDef, UnauthorizedErrorResponse>;
    /** @deprecated use `UnauthorizedErrorResponse$Outbound` instead. */
    type Outbound = UnauthorizedErrorResponse$Outbound;
}
//# sourceMappingURL=unauthorizederrorresponse.d.ts.map