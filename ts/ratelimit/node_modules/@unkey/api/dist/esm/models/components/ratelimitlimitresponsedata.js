/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RatelimitLimitResponseData$inboundSchema = z.object({
    limit: z.number().int(),
    remaining: z.number().int(),
    reset: z.number().int(),
    success: z.boolean(),
    overrideId: z.string().optional(),
});
/** @internal */
export const RatelimitLimitResponseData$outboundSchema = z.object({
    limit: z.number().int(),
    remaining: z.number().int(),
    reset: z.number().int(),
    success: z.boolean(),
    overrideId: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RatelimitLimitResponseData$;
(function (RatelimitLimitResponseData$) {
    /** @deprecated use `RatelimitLimitResponseData$inboundSchema` instead. */
    RatelimitLimitResponseData$.inboundSchema = RatelimitLimitResponseData$inboundSchema;
    /** @deprecated use `RatelimitLimitResponseData$outboundSchema` instead. */
    RatelimitLimitResponseData$.outboundSchema = RatelimitLimitResponseData$outboundSchema;
})(RatelimitLimitResponseData$ || (RatelimitLimitResponseData$ = {}));
export function ratelimitLimitResponseDataToJSON(ratelimitLimitResponseData) {
    return JSON.stringify(RatelimitLimitResponseData$outboundSchema.parse(ratelimitLimitResponseData));
}
export function ratelimitLimitResponseDataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RatelimitLimitResponseData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RatelimitLimitResponseData' from JSON`);
}
//# sourceMappingURL=ratelimitlimitresponsedata.js.map