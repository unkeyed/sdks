import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type LivenessResponseData = {
    /**
     * Whether we're alive or not
     */
    message: string;
};
/** @internal */
export declare const LivenessResponseData$inboundSchema: z.ZodType<LivenessResponseData, z.ZodTypeDef, unknown>;
/** @internal */
export type LivenessResponseData$Outbound = {
    message: string;
};
/** @internal */
export declare const LivenessResponseData$outboundSchema: z.ZodType<LivenessResponseData$Outbound, z.ZodTypeDef, LivenessResponseData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LivenessResponseData$ {
    /** @deprecated use `LivenessResponseData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LivenessResponseData, z.ZodTypeDef, unknown>;
    /** @deprecated use `LivenessResponseData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LivenessResponseData$Outbound, z.ZodTypeDef, LivenessResponseData>;
    /** @deprecated use `LivenessResponseData$Outbound` instead. */
    type Outbound = LivenessResponseData$Outbound;
}
export declare function livenessResponseDataToJSON(livenessResponseData: LivenessResponseData): string;
export declare function livenessResponseDataFromJSON(jsonString: string): SafeParseResult<LivenessResponseData, SDKValidationError>;
//# sourceMappingURL=livenessresponsedata.d.ts.map