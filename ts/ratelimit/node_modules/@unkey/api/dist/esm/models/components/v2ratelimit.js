/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const V2Ratelimit$inboundSchema = z.object({
    name: z.string(),
    limit: z.number().int(),
    duration: z.number().int(),
});
/** @internal */
export const V2Ratelimit$outboundSchema = z.object({
    name: z.string(),
    limit: z.number().int(),
    duration: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var V2Ratelimit$;
(function (V2Ratelimit$) {
    /** @deprecated use `V2Ratelimit$inboundSchema` instead. */
    V2Ratelimit$.inboundSchema = V2Ratelimit$inboundSchema;
    /** @deprecated use `V2Ratelimit$outboundSchema` instead. */
    V2Ratelimit$.outboundSchema = V2Ratelimit$outboundSchema;
})(V2Ratelimit$ || (V2Ratelimit$ = {}));
export function v2RatelimitToJSON(v2Ratelimit) {
    return JSON.stringify(V2Ratelimit$outboundSchema.parse(v2Ratelimit));
}
export function v2RatelimitFromJSON(jsonString) {
    return safeParse(jsonString, (x) => V2Ratelimit$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'V2Ratelimit' from JSON`);
}
//# sourceMappingURL=v2ratelimit.js.map