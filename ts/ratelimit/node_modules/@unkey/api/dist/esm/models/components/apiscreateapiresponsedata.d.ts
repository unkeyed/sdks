import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ApisCreateApiResponseData = {
    /**
     * The id of the API
     */
    apiId: string;
    /**
     * The name of the API
     */
    name: string;
};
/** @internal */
export declare const ApisCreateApiResponseData$inboundSchema: z.ZodType<ApisCreateApiResponseData, z.ZodTypeDef, unknown>;
/** @internal */
export type ApisCreateApiResponseData$Outbound = {
    apiId: string;
    name: string;
};
/** @internal */
export declare const ApisCreateApiResponseData$outboundSchema: z.ZodType<ApisCreateApiResponseData$Outbound, z.ZodTypeDef, ApisCreateApiResponseData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ApisCreateApiResponseData$ {
    /** @deprecated use `ApisCreateApiResponseData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ApisCreateApiResponseData, z.ZodTypeDef, unknown>;
    /** @deprecated use `ApisCreateApiResponseData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ApisCreateApiResponseData$Outbound, z.ZodTypeDef, ApisCreateApiResponseData>;
    /** @deprecated use `ApisCreateApiResponseData$Outbound` instead. */
    type Outbound = ApisCreateApiResponseData$Outbound;
}
export declare function apisCreateApiResponseDataToJSON(apisCreateApiResponseData: ApisCreateApiResponseData): string;
export declare function apisCreateApiResponseDataFromJSON(jsonString: string): SafeParseResult<ApisCreateApiResponseData, SDKValidationError>;
//# sourceMappingURL=apiscreateapiresponsedata.d.ts.map