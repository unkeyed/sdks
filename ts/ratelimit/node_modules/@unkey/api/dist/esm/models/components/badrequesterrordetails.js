/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ValidationError$inboundSchema, ValidationError$outboundSchema, } from "./validationerror.js";
/** @internal */
export const BadRequestErrorDetails$inboundSchema = z.object({
    detail: z.string(),
    instance: z.string().optional(),
    status: z.number().int(),
    title: z.string(),
    type: z.string(),
    errors: z.array(ValidationError$inboundSchema),
});
/** @internal */
export const BadRequestErrorDetails$outboundSchema = z.object({
    detail: z.string(),
    instance: z.string().optional(),
    status: z.number().int(),
    title: z.string(),
    type: z.string(),
    errors: z.array(ValidationError$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BadRequestErrorDetails$;
(function (BadRequestErrorDetails$) {
    /** @deprecated use `BadRequestErrorDetails$inboundSchema` instead. */
    BadRequestErrorDetails$.inboundSchema = BadRequestErrorDetails$inboundSchema;
    /** @deprecated use `BadRequestErrorDetails$outboundSchema` instead. */
    BadRequestErrorDetails$.outboundSchema = BadRequestErrorDetails$outboundSchema;
})(BadRequestErrorDetails$ || (BadRequestErrorDetails$ = {}));
export function badRequestErrorDetailsToJSON(badRequestErrorDetails) {
    return JSON.stringify(BadRequestErrorDetails$outboundSchema.parse(badRequestErrorDetails));
}
export function badRequestErrorDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BadRequestErrorDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BadRequestErrorDetails' from JSON`);
}
//# sourceMappingURL=badrequesterrordetails.js.map