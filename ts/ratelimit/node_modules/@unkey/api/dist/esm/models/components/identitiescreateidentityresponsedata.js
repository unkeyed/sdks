/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const IdentitiesCreateIdentityResponseData$inboundSchema = z.object({
    identityId: z.string(),
});
/** @internal */
export const IdentitiesCreateIdentityResponseData$outboundSchema = z.object({
    identityId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IdentitiesCreateIdentityResponseData$;
(function (IdentitiesCreateIdentityResponseData$) {
    /** @deprecated use `IdentitiesCreateIdentityResponseData$inboundSchema` instead. */
    IdentitiesCreateIdentityResponseData$.inboundSchema = IdentitiesCreateIdentityResponseData$inboundSchema;
    /** @deprecated use `IdentitiesCreateIdentityResponseData$outboundSchema` instead. */
    IdentitiesCreateIdentityResponseData$.outboundSchema = IdentitiesCreateIdentityResponseData$outboundSchema;
})(IdentitiesCreateIdentityResponseData$ || (IdentitiesCreateIdentityResponseData$ = {}));
export function identitiesCreateIdentityResponseDataToJSON(identitiesCreateIdentityResponseData) {
    return JSON.stringify(IdentitiesCreateIdentityResponseData$outboundSchema.parse(identitiesCreateIdentityResponseData));
}
export function identitiesCreateIdentityResponseDataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IdentitiesCreateIdentityResponseData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IdentitiesCreateIdentityResponseData' from JSON`);
}
//# sourceMappingURL=identitiescreateidentityresponsedata.js.map