import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type IdentitiesCreateIdentityResponseData = {
    /**
     * The id of the identity. Used internally, you do not need to store this.
     */
    identityId: string;
};
/** @internal */
export declare const IdentitiesCreateIdentityResponseData$inboundSchema: z.ZodType<IdentitiesCreateIdentityResponseData, z.ZodTypeDef, unknown>;
/** @internal */
export type IdentitiesCreateIdentityResponseData$Outbound = {
    identityId: string;
};
/** @internal */
export declare const IdentitiesCreateIdentityResponseData$outboundSchema: z.ZodType<IdentitiesCreateIdentityResponseData$Outbound, z.ZodTypeDef, IdentitiesCreateIdentityResponseData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace IdentitiesCreateIdentityResponseData$ {
    /** @deprecated use `IdentitiesCreateIdentityResponseData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<IdentitiesCreateIdentityResponseData, z.ZodTypeDef, unknown>;
    /** @deprecated use `IdentitiesCreateIdentityResponseData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<IdentitiesCreateIdentityResponseData$Outbound, z.ZodTypeDef, IdentitiesCreateIdentityResponseData>;
    /** @deprecated use `IdentitiesCreateIdentityResponseData$Outbound` instead. */
    type Outbound = IdentitiesCreateIdentityResponseData$Outbound;
}
export declare function identitiesCreateIdentityResponseDataToJSON(identitiesCreateIdentityResponseData: IdentitiesCreateIdentityResponseData): string;
export declare function identitiesCreateIdentityResponseDataFromJSON(jsonString: string): SafeParseResult<IdentitiesCreateIdentityResponseData, SDKValidationError>;
//# sourceMappingURL=identitiescreateidentityresponsedata.d.ts.map