/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RatelimitOverride$inboundSchema = z.object({
    namespaceId: z.string(),
    overrideId: z.string(),
    duration: z.number().int(),
    identifier: z.string(),
    limit: z.number().int(),
});
/** @internal */
export const RatelimitOverride$outboundSchema = z.object({
    namespaceId: z.string(),
    overrideId: z.string(),
    duration: z.number().int(),
    identifier: z.string(),
    limit: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RatelimitOverride$;
(function (RatelimitOverride$) {
    /** @deprecated use `RatelimitOverride$inboundSchema` instead. */
    RatelimitOverride$.inboundSchema = RatelimitOverride$inboundSchema;
    /** @deprecated use `RatelimitOverride$outboundSchema` instead. */
    RatelimitOverride$.outboundSchema = RatelimitOverride$outboundSchema;
})(RatelimitOverride$ || (RatelimitOverride$ = {}));
export function ratelimitOverrideToJSON(ratelimitOverride) {
    return JSON.stringify(RatelimitOverride$outboundSchema.parse(ratelimitOverride));
}
export function ratelimitOverrideFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RatelimitOverride$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RatelimitOverride' from JSON`);
}
//# sourceMappingURL=ratelimitoverride.js.map