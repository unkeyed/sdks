/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { UnkeyCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$apisCreateApi } from "./tools/apisCreateApi.js";
import { tool$apisDeleteApi } from "./tools/apisDeleteApi.js";
import { tool$apisGetApi } from "./tools/apisGetApi.js";
import { tool$apisListKeys } from "./tools/apisListKeys.js";
import { tool$identitiesCreateIdentity } from "./tools/identitiesCreateIdentity.js";
import { tool$identitiesDeleteIdentity } from "./tools/identitiesDeleteIdentity.js";
import { tool$identitiesGetIdentity } from "./tools/identitiesGetIdentity.js";
import { tool$identitiesListIdentities } from "./tools/identitiesListIdentities.js";
import { tool$identitiesUpdateIdentity } from "./tools/identitiesUpdateIdentity.js";
import { tool$keysAddPermissions } from "./tools/keysAddPermissions.js";
import { tool$keysAddRoles } from "./tools/keysAddRoles.js";
import { tool$keysCreateKey } from "./tools/keysCreateKey.js";
import { tool$keysDeleteKey } from "./tools/keysDeleteKey.js";
import { tool$keysGetKey } from "./tools/keysGetKey.js";
import { tool$keysRemovePermissions } from "./tools/keysRemovePermissions.js";
import { tool$keysRemoveRoles } from "./tools/keysRemoveRoles.js";
import { tool$keysRerollKey } from "./tools/keysRerollKey.js";
import { tool$keysSetPermissions } from "./tools/keysSetPermissions.js";
import { tool$keysSetRoles } from "./tools/keysSetRoles.js";
import { tool$keysUpdateCredits } from "./tools/keysUpdateCredits.js";
import { tool$keysUpdateKey } from "./tools/keysUpdateKey.js";
import { tool$keysVerifyKey } from "./tools/keysVerifyKey.js";
import { tool$keysWhoami } from "./tools/keysWhoami.js";
import { tool$permissionsCreatePermission } from "./tools/permissionsCreatePermission.js";
import { tool$permissionsCreateRole } from "./tools/permissionsCreateRole.js";
import { tool$permissionsDeletePermission } from "./tools/permissionsDeletePermission.js";
import { tool$permissionsDeleteRole } from "./tools/permissionsDeleteRole.js";
import { tool$permissionsGetPermission } from "./tools/permissionsGetPermission.js";
import { tool$permissionsGetRole } from "./tools/permissionsGetRole.js";
import { tool$permissionsListPermissions } from "./tools/permissionsListPermissions.js";
import { tool$permissionsListRoles } from "./tools/permissionsListRoles.js";
import { tool$ratelimitDeleteOverride } from "./tools/ratelimitDeleteOverride.js";
import { tool$ratelimitGetOverride } from "./tools/ratelimitGetOverride.js";
import { tool$ratelimitLimit } from "./tools/ratelimitLimit.js";
import { tool$ratelimitListOverrides } from "./tools/ratelimitListOverrides.js";
import { tool$ratelimitSetOverride } from "./tools/ratelimitSetOverride.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  rootKey?: SDKOptions["rootKey"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Unkey",
    version: "2.1.0",
  });

  const client = new UnkeyCore({
    rootKey: deps.rootKey,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$apisCreateApi);
  tool(tool$apisDeleteApi);
  tool(tool$apisGetApi);
  tool(tool$apisListKeys);
  tool(tool$identitiesCreateIdentity);
  tool(tool$identitiesDeleteIdentity);
  tool(tool$identitiesGetIdentity);
  tool(tool$identitiesListIdentities);
  tool(tool$identitiesUpdateIdentity);
  tool(tool$keysAddPermissions);
  tool(tool$keysAddRoles);
  tool(tool$keysCreateKey);
  tool(tool$keysDeleteKey);
  tool(tool$keysGetKey);
  tool(tool$keysRemovePermissions);
  tool(tool$keysRemoveRoles);
  tool(tool$keysRerollKey);
  tool(tool$keysSetPermissions);
  tool(tool$keysSetRoles);
  tool(tool$keysUpdateCredits);
  tool(tool$keysUpdateKey);
  tool(tool$keysVerifyKey);
  tool(tool$keysWhoami);
  tool(tool$permissionsCreatePermission);
  tool(tool$permissionsCreateRole);
  tool(tool$permissionsDeletePermission);
  tool(tool$permissionsDeleteRole);
  tool(tool$permissionsGetPermission);
  tool(tool$permissionsGetRole);
  tool(tool$permissionsListPermissions);
  tool(tool$permissionsListRoles);
  tool(tool$ratelimitDeleteOverride);
  tool(tool$ratelimitGetOverride);
  tool(tool$ratelimitLimit);
  tool(tool$ratelimitListOverrides);
  tool(tool$ratelimitSetOverride);

  return server;
}
