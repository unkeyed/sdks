/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysWhoami } from "../../funcs/keysWhoami.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2KeysWhoamiRequestBody$inboundSchema,
};

export const tool$keysWhoami: ToolDefinition<typeof args> = {
  name: "keys-whoami",
  description: `Get API key by hash

Find out what key this is.

**Required Permissions**

Your root key must have one of the following permissions for basic key information:
- \`api.*.read_key\` (to read keys from any API)
- \`api.<api_id>.read_key\` (to read keys from a specific API)

If your rootkey lacks permissions but the key exists, we may return a 404 status here to prevent leaking the existance of a key to unauthorized clients. If you believe that a key should exist, but receive a 404, please double check your root key has the correct permissions.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await keysWhoami(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
