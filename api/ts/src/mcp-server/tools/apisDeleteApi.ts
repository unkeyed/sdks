/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apisDeleteApi } from "../../funcs/apisDeleteApi.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2ApisDeleteApiRequestBody$inboundSchema,
};

export const tool$apisDeleteApi: ToolDefinition<typeof args> = {
  name: "apis-delete-api",
  description: `Delete API namespace

Permanently delete an API namespace and immediately invalidate all associated keys.

Use this for cleaning up development environments, retiring deprecated services, or removing unused resources.
All keys in the namespace are immediately marked as deleted and will fail verification with \`code=NOT_FOUND\`.

**Important**: This operation is immediate and permanent. Verify you have the correct API ID before deletion.
If delete protection is enabled, disable it first through the dashboard or API configuration.

**Required Permissions**

Your root key must have one of the following permissions:
- \`api.*.delete_api\` (to delete any API)
- \`api.<api_id>.delete_api\` (to delete a specific API)
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apisDeleteApi(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
