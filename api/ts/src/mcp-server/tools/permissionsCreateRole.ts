/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { permissionsCreateRole } from "../../funcs/permissionsCreateRole.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2PermissionsCreateRoleRequestBody$inboundSchema,
};

export const tool$permissionsCreateRole: ToolDefinition<typeof args> = {
  name: "permissions-create-role",
  description: `Create role

Create a new role to group related permissions for easier management. Roles enable consistent permission assignment across multiple API keys.

**Important:** Role names must be unique within the workspace. Once created, roles are immediately available for assignment.

**Required Permissions**

Your root key must have the following permission:
- \`rbac.*.create_role\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await permissionsCreateRole(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
