/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysDeleteKey } from "../../funcs/keysDeleteKey.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2KeysDeleteKeyRequestBody$inboundSchema,
};

export const tool$keysDeleteKey: ToolDefinition<typeof args> = {
  name: "keys-delete-key",
  description: `Delete API keys

Delete API keys permanently from user accounts or for cleanup purposes.

Use this for user-requested key deletion, account deletion workflows, or cleaning up unused keys. Keys are immediately invalidated. Two modes: soft delete (default, preserves audit records) and permanent delete.

**Important**: For temporary access control, use \`updateKey\` with \`enabled: false\` instead of deletion.

**Required Permissions**

Your root key must have one of the following permissions:
- \`api.*.delete_key\` (to delete keys in any API)
- \`api.<api_id>.delete_key\` (to delete keys in a specific API)
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await keysDeleteKey(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
