/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ratelimitDeleteOverride } from "../../funcs/ratelimitDeleteOverride.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2RatelimitDeleteOverrideRequestBody$inboundSchema,
};

export const tool$ratelimitDeleteOverride: ToolDefinition<typeof args> = {
  name: "ratelimit-delete-override",
  description: `Delete ratelimit override

Permanently remove a rate limit override. Affected identifiers immediately revert to the namespace default.

Use this to remove temporary overrides, reset identifiers to standard limits, or clean up outdated rules.

**Important:** Deletion is immediate and permanent. The override cannot be recovered and must be recreated if needed again.

**Permissions:** Requires \`ratelimit.*.delete_override\` or \`ratelimit.<namespace_id>.delete_override\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await ratelimitDeleteOverride(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
