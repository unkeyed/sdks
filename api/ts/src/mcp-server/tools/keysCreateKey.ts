/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysCreateKey } from "../../funcs/keysCreateKey.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.V2KeysCreateKeyRequestBody$inboundSchema,
};

export const tool$keysCreateKey: ToolDefinition<typeof args> = {
  name: "keys-create-key",
  description: `Create API key

Create a new API key for user authentication and authorization.

Use this endpoint when users sign up, upgrade subscription tiers, or need additional keys. Keys are cryptographically secure and unique to the specified API namespace.

**Important**: The key is returned only once. Store it immediately and provide it to your user, as it cannot be retrieved later.

**Common use cases:**
- Generate keys for new user registrations
- Create additional keys for different applications
- Issue keys with specific permissions or limits

**Required Permissions**

Your root key needs one of:
- \`api.*.create_key\` (create keys in any API)
- \`api.<api_id>.create_key\` (create keys in specific API)
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await keysCreateKey(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
