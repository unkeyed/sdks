/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IdentitiesListIdentitiesResponse = {
  result: components.V2IdentitiesListIdentitiesResponseBody;
};

/** @internal */
export const IdentitiesListIdentitiesResponse$inboundSchema: z.ZodType<
  IdentitiesListIdentitiesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.V2IdentitiesListIdentitiesResponseBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type IdentitiesListIdentitiesResponse$Outbound = {
  Result: components.V2IdentitiesListIdentitiesResponseBody$Outbound;
};

/** @internal */
export const IdentitiesListIdentitiesResponse$outboundSchema: z.ZodType<
  IdentitiesListIdentitiesResponse$Outbound,
  z.ZodTypeDef,
  IdentitiesListIdentitiesResponse
> = z.object({
  result: components.V2IdentitiesListIdentitiesResponseBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IdentitiesListIdentitiesResponse$ {
  /** @deprecated use `IdentitiesListIdentitiesResponse$inboundSchema` instead. */
  export const inboundSchema = IdentitiesListIdentitiesResponse$inboundSchema;
  /** @deprecated use `IdentitiesListIdentitiesResponse$outboundSchema` instead. */
  export const outboundSchema = IdentitiesListIdentitiesResponse$outboundSchema;
  /** @deprecated use `IdentitiesListIdentitiesResponse$Outbound` instead. */
  export type Outbound = IdentitiesListIdentitiesResponse$Outbound;
}

export function identitiesListIdentitiesResponseToJSON(
  identitiesListIdentitiesResponse: IdentitiesListIdentitiesResponse,
): string {
  return JSON.stringify(
    IdentitiesListIdentitiesResponse$outboundSchema.parse(
      identitiesListIdentitiesResponse,
    ),
  );
}

export function identitiesListIdentitiesResponseFromJSON(
  jsonString: string,
): SafeParseResult<IdentitiesListIdentitiesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IdentitiesListIdentitiesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IdentitiesListIdentitiesResponse' from JSON`,
  );
}
