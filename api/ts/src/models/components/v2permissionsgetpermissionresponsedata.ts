/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Permission,
  Permission$inboundSchema,
  Permission$Outbound,
  Permission$outboundSchema,
} from "./permission.js";

/**
 * Complete permission details including ID, name, and metadata.
 */
export type V2PermissionsGetPermissionResponseData = {
  permission: Permission;
};

/** @internal */
export const V2PermissionsGetPermissionResponseData$inboundSchema: z.ZodType<
  V2PermissionsGetPermissionResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  permission: Permission$inboundSchema,
});

/** @internal */
export type V2PermissionsGetPermissionResponseData$Outbound = {
  permission: Permission$Outbound;
};

/** @internal */
export const V2PermissionsGetPermissionResponseData$outboundSchema: z.ZodType<
  V2PermissionsGetPermissionResponseData$Outbound,
  z.ZodTypeDef,
  V2PermissionsGetPermissionResponseData
> = z.object({
  permission: Permission$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2PermissionsGetPermissionResponseData$ {
  /** @deprecated use `V2PermissionsGetPermissionResponseData$inboundSchema` instead. */
  export const inboundSchema =
    V2PermissionsGetPermissionResponseData$inboundSchema;
  /** @deprecated use `V2PermissionsGetPermissionResponseData$outboundSchema` instead. */
  export const outboundSchema =
    V2PermissionsGetPermissionResponseData$outboundSchema;
  /** @deprecated use `V2PermissionsGetPermissionResponseData$Outbound` instead. */
  export type Outbound = V2PermissionsGetPermissionResponseData$Outbound;
}

export function v2PermissionsGetPermissionResponseDataToJSON(
  v2PermissionsGetPermissionResponseData:
    V2PermissionsGetPermissionResponseData,
): string {
  return JSON.stringify(
    V2PermissionsGetPermissionResponseData$outboundSchema.parse(
      v2PermissionsGetPermissionResponseData,
    ),
  );
}

export function v2PermissionsGetPermissionResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<V2PermissionsGetPermissionResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V2PermissionsGetPermissionResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2PermissionsGetPermissionResponseData' from JSON`,
  );
}
