/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2RatelimitSetOverrideResponseData = {
  /**
   * The unique identifier for the newly created or updated rate limit override. This ID can be used to:
   *
   * @remarks
   *
   * - Reference this specific override in subsequent API calls
   * - Delete or modify this override later
   * - Track which override is being applied in rate limit responses
   * - Associate override effects with specific rules in analytics
   *
   * Store this ID if you need to manage the override in the future.
   */
  overrideId: string;
};

/** @internal */
export const V2RatelimitSetOverrideResponseData$inboundSchema: z.ZodType<
  V2RatelimitSetOverrideResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  overrideId: z.string(),
});

/** @internal */
export type V2RatelimitSetOverrideResponseData$Outbound = {
  overrideId: string;
};

/** @internal */
export const V2RatelimitSetOverrideResponseData$outboundSchema: z.ZodType<
  V2RatelimitSetOverrideResponseData$Outbound,
  z.ZodTypeDef,
  V2RatelimitSetOverrideResponseData
> = z.object({
  overrideId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2RatelimitSetOverrideResponseData$ {
  /** @deprecated use `V2RatelimitSetOverrideResponseData$inboundSchema` instead. */
  export const inboundSchema = V2RatelimitSetOverrideResponseData$inboundSchema;
  /** @deprecated use `V2RatelimitSetOverrideResponseData$outboundSchema` instead. */
  export const outboundSchema =
    V2RatelimitSetOverrideResponseData$outboundSchema;
  /** @deprecated use `V2RatelimitSetOverrideResponseData$Outbound` instead. */
  export type Outbound = V2RatelimitSetOverrideResponseData$Outbound;
}

export function v2RatelimitSetOverrideResponseDataToJSON(
  v2RatelimitSetOverrideResponseData: V2RatelimitSetOverrideResponseData,
): string {
  return JSON.stringify(
    V2RatelimitSetOverrideResponseData$outboundSchema.parse(
      v2RatelimitSetOverrideResponseData,
    ),
  );
}

export function v2RatelimitSetOverrideResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<V2RatelimitSetOverrideResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V2RatelimitSetOverrideResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2RatelimitSetOverrideResponseData' from JSON`,
  );
}
