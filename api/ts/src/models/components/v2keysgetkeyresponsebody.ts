/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  KeyResponseData,
  KeyResponseData$inboundSchema,
  KeyResponseData$Outbound,
  KeyResponseData$outboundSchema,
} from "./keyresponsedata.js";
import {
  Meta,
  Meta$inboundSchema,
  Meta$Outbound,
  Meta$outboundSchema,
} from "./meta.js";

export type V2KeysGetKeyResponseBody = {
  /**
   * Metadata object included in every API response. This provides context about the request and is essential for debugging, audit trails, and support inquiries. The `requestId` is particularly important when troubleshooting issues with the Unkey support team.
   */
  meta: Meta;
  data: KeyResponseData;
};

/** @internal */
export const V2KeysGetKeyResponseBody$inboundSchema: z.ZodType<
  V2KeysGetKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  meta: Meta$inboundSchema,
  data: KeyResponseData$inboundSchema,
});

/** @internal */
export type V2KeysGetKeyResponseBody$Outbound = {
  meta: Meta$Outbound;
  data: KeyResponseData$Outbound;
};

/** @internal */
export const V2KeysGetKeyResponseBody$outboundSchema: z.ZodType<
  V2KeysGetKeyResponseBody$Outbound,
  z.ZodTypeDef,
  V2KeysGetKeyResponseBody
> = z.object({
  meta: Meta$outboundSchema,
  data: KeyResponseData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2KeysGetKeyResponseBody$ {
  /** @deprecated use `V2KeysGetKeyResponseBody$inboundSchema` instead. */
  export const inboundSchema = V2KeysGetKeyResponseBody$inboundSchema;
  /** @deprecated use `V2KeysGetKeyResponseBody$outboundSchema` instead. */
  export const outboundSchema = V2KeysGetKeyResponseBody$outboundSchema;
  /** @deprecated use `V2KeysGetKeyResponseBody$Outbound` instead. */
  export type Outbound = V2KeysGetKeyResponseBody$Outbound;
}

export function v2KeysGetKeyResponseBodyToJSON(
  v2KeysGetKeyResponseBody: V2KeysGetKeyResponseBody,
): string {
  return JSON.stringify(
    V2KeysGetKeyResponseBody$outboundSchema.parse(v2KeysGetKeyResponseBody),
  );
}

export function v2KeysGetKeyResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V2KeysGetKeyResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2KeysGetKeyResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2KeysGetKeyResponseBody' from JSON`,
  );
}
