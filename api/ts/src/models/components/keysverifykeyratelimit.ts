/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type KeysVerifyKeyRatelimit = {
  /**
   * References an existing ratelimit by its name. Key Ratelimits will take precedence over identifier-based limits.
   */
  name: string;
  /**
   * Optionally override how expensive this operation is and how many tokens are deducted from the current limit.
   */
  cost?: number | undefined;
  /**
   * Optionally override the maximum number of requests allowed within the specified interval.
   */
  limit?: number | undefined;
  /**
   * Optionally override the duration of the rate limit window duration.
   */
  duration?: number | undefined;
};

/** @internal */
export const KeysVerifyKeyRatelimit$inboundSchema: z.ZodType<
  KeysVerifyKeyRatelimit,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  cost: z.number().int().default(1),
  limit: z.number().int().optional(),
  duration: z.number().int().optional(),
});

/** @internal */
export type KeysVerifyKeyRatelimit$Outbound = {
  name: string;
  cost: number;
  limit?: number | undefined;
  duration?: number | undefined;
};

/** @internal */
export const KeysVerifyKeyRatelimit$outboundSchema: z.ZodType<
  KeysVerifyKeyRatelimit$Outbound,
  z.ZodTypeDef,
  KeysVerifyKeyRatelimit
> = z.object({
  name: z.string(),
  cost: z.number().int().default(1),
  limit: z.number().int().optional(),
  duration: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KeysVerifyKeyRatelimit$ {
  /** @deprecated use `KeysVerifyKeyRatelimit$inboundSchema` instead. */
  export const inboundSchema = KeysVerifyKeyRatelimit$inboundSchema;
  /** @deprecated use `KeysVerifyKeyRatelimit$outboundSchema` instead. */
  export const outboundSchema = KeysVerifyKeyRatelimit$outboundSchema;
  /** @deprecated use `KeysVerifyKeyRatelimit$Outbound` instead. */
  export type Outbound = KeysVerifyKeyRatelimit$Outbound;
}

export function keysVerifyKeyRatelimitToJSON(
  keysVerifyKeyRatelimit: KeysVerifyKeyRatelimit,
): string {
  return JSON.stringify(
    KeysVerifyKeyRatelimit$outboundSchema.parse(keysVerifyKeyRatelimit),
  );
}

export function keysVerifyKeyRatelimitFromJSON(
  jsonString: string,
): SafeParseResult<KeysVerifyKeyRatelimit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KeysVerifyKeyRatelimit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KeysVerifyKeyRatelimit' from JSON`,
  );
}
