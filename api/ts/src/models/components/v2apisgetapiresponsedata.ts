/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2ApisGetApiResponseData = {
  /**
   * The unique identifier of this API within Unkey's system.
   *
   * @remarks
   * Used in all operations related to this API including key creation, verification, and management.
   * Always begins with 'api_' followed by alphanumeric characters and underscores.
   * This identifier is permanent and never changes after API creation.
   */
  id: string;
  /**
   * The internal name of this API as specified during creation.
   *
   * @remarks
   * Used for organization and identification within your workspace.
   * Helps distinguish between different environments, services, or access tiers.
   * Not visible to end users - this is purely for administrative purposes.
   */
  name: string;
};

/** @internal */
export const V2ApisGetApiResponseData$inboundSchema: z.ZodType<
  V2ApisGetApiResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
});

/** @internal */
export type V2ApisGetApiResponseData$Outbound = {
  id: string;
  name: string;
};

/** @internal */
export const V2ApisGetApiResponseData$outboundSchema: z.ZodType<
  V2ApisGetApiResponseData$Outbound,
  z.ZodTypeDef,
  V2ApisGetApiResponseData
> = z.object({
  id: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2ApisGetApiResponseData$ {
  /** @deprecated use `V2ApisGetApiResponseData$inboundSchema` instead. */
  export const inboundSchema = V2ApisGetApiResponseData$inboundSchema;
  /** @deprecated use `V2ApisGetApiResponseData$outboundSchema` instead. */
  export const outboundSchema = V2ApisGetApiResponseData$outboundSchema;
  /** @deprecated use `V2ApisGetApiResponseData$Outbound` instead. */
  export type Outbound = V2ApisGetApiResponseData$Outbound;
}

export function v2ApisGetApiResponseDataToJSON(
  v2ApisGetApiResponseData: V2ApisGetApiResponseData,
): string {
  return JSON.stringify(
    V2ApisGetApiResponseData$outboundSchema.parse(v2ApisGetApiResponseData),
  );
}

export function v2ApisGetApiResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<V2ApisGetApiResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2ApisGetApiResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2ApisGetApiResponseData' from JSON`,
  );
}
