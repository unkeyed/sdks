"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing_extensions import TypedDict
from unkey.py.types import BaseModel


class KeysVerifyKeyCreditsTypedDict(TypedDict):
    r"""Controls credit consumption for usage-based billing and quota enforcement.
    Omitting this field uses the default cost of 1 credit per verification.
    Credits provide globally consistent usage tracking, essential for paid APIs with strict quotas.

    """

    cost: int
    r"""Sets how many credits to deduct for this verification request.
    Use 0 for read-only operations or free tier access, higher values for premium features.
    Credits are deducted after all security checks pass.
    Essential for implementing usage-based pricing with different operation costs.

    """


class KeysVerifyKeyCredits(BaseModel):
    r"""Controls credit consumption for usage-based billing and quota enforcement.
    Omitting this field uses the default cost of 1 credit per verification.
    Credits provide globally consistent usage tracking, essential for paid APIs with strict quotas.

    """

    cost: int
    r"""Sets how many credits to deduct for this verification request.
    Use 0 for read-only operations or free tier access, higher values for premium features.
    Credits are deducted after all security checks pass.
    Essential for implementing usage-based pricing with different operation costs.

    """
