"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .identity import Identity, IdentityTypedDict
from .meta import Meta, MetaTypedDict
from .pagination import Pagination, PaginationTypedDict
from typing import List
from typing_extensions import TypedDict
from unkey.py.types import BaseModel


class V2IdentitiesListIdentitiesResponseBodyTypedDict(TypedDict):
    meta: MetaTypedDict
    r"""Metadata object included in every API response. This provides context about the request and is essential for debugging, audit trails, and support inquiries. The `requestId` is particularly important when troubleshooting issues with the Unkey support team."""
    data: List[IdentityTypedDict]
    r"""List of identities matching the specified criteria."""
    pagination: PaginationTypedDict
    r"""Pagination metadata for list endpoints. Provides information necessary to traverse through large result sets efficiently using cursor-based pagination."""


class V2IdentitiesListIdentitiesResponseBody(BaseModel):
    meta: Meta
    r"""Metadata object included in every API response. This provides context about the request and is essential for debugging, audit trails, and support inquiries. The `requestId` is particularly important when troubleshooting issues with the Unkey support team."""

    data: List[Identity]
    r"""List of identities matching the specified criteria."""

    pagination: Pagination
    r"""Pagination metadata for list endpoints. Provides information necessary to traverse through large result sets efficiently using cursor-based pagination."""
