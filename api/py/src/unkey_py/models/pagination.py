"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class PaginationTypedDict(TypedDict):
    cursor: NotRequired[str]
    r"""Opaque token for retrieving the next set of results"""
    has_more: NotRequired[bool]
    r"""Indicates if more results exist beyond this page"""


class Pagination(BaseModel):
    cursor: Optional[str] = None
    r"""Opaque token for retrieving the next set of results"""

    has_more: Annotated[Optional[bool], pydantic.Field(alias="hasMore")] = None
    r"""Indicates if more results exist beyond this page"""
