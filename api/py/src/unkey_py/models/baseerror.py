"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing import Optional
from typing_extensions import NotRequired, TypedDict
from unkey_py.types import BaseModel


class BaseErrorTypedDict(TypedDict):
    detail: str
    r"""A human-readable explanation specific to this occurrence of the problem."""
    status: int
    r"""HTTP status code"""
    title: str
    r"""A short, human-readable summary of the problem type. This value should not change between occurrences of the error."""
    type: str
    r"""A URI reference to human-readable documentation for the error."""
    instance: NotRequired[str]
    r"""A URI reference that identifies the specific occurrence of the problem."""


class BaseError(BaseModel):
    detail: str
    r"""A human-readable explanation specific to this occurrence of the problem."""

    status: int
    r"""HTTP status code"""

    title: str
    r"""A short, human-readable summary of the problem type. This value should not change between occurrences of the error."""

    type: str
    r"""A URI reference to human-readable documentation for the error."""

    instance: Optional[str] = None
    r"""A URI reference that identifies the specific occurrence of the problem."""
