"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class RatelimitLimitResponseDataTypedDict(TypedDict):
    limit: int
    r"""The maximum number of requests allowed."""
    remaining: int
    r"""The number of requests remaining in the current window."""
    reset: int
    r"""The time in milliseconds when the rate limit will reset."""
    success: bool
    r"""Whether the request passed the ratelimit. If false, the request must be blocked."""
    override_id: NotRequired[str]
    r"""The override that was used. May be empty"""


class RatelimitLimitResponseData(BaseModel):
    limit: int
    r"""The maximum number of requests allowed."""

    remaining: int
    r"""The number of requests remaining in the current window."""

    reset: int
    r"""The time in milliseconds when the rate limit will reset."""

    success: bool
    r"""Whether the request passed the ratelimit. If false, the request must be blocked."""

    override_id: Annotated[Optional[str], pydantic.Field(alias="overrideId")] = None
    r"""The override that was used. May be empty"""
