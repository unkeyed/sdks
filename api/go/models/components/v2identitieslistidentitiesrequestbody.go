// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/unkeyed/sdks/api/go/v2/internal/utils"
)

type V2IdentitiesListIdentitiesRequestBody struct {
	// The maximum number of identities to return in a single request. Use this to control response size and loading performance.
	Limit *int64 `default:"100" json:"limit"`
	// Pagination cursor from a previous response. Use this to fetch subsequent pages of results when the response contains a cursor value.
	Cursor *string `json:"cursor,omitempty"`
}

func (v V2IdentitiesListIdentitiesRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2IdentitiesListIdentitiesRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *V2IdentitiesListIdentitiesRequestBody) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *V2IdentitiesListIdentitiesRequestBody) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}
