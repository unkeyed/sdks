// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type RatelimitLimitResponseData struct {
	// The maximum number of requests allowed.
	Limit int64 `json:"limit"`
	// The number of requests remaining in the current window.
	Remaining int64 `json:"remaining"`
	// The time in milliseconds when the rate limit will reset.
	Reset int64 `json:"reset"`
	// Whether the request passed the ratelimit. If false, the request must be blocked.
	Success bool `json:"success"`
	// The override that was used. May be empty
	OverrideID *string `json:"overrideId,omitempty"`
}

func (o *RatelimitLimitResponseData) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *RatelimitLimitResponseData) GetRemaining() int64 {
	if o == nil {
		return 0
	}
	return o.Remaining
}

func (o *RatelimitLimitResponseData) GetReset() int64 {
	if o == nil {
		return 0
	}
	return o.Reset
}

func (o *RatelimitLimitResponseData) GetSuccess() bool {
	if o == nil {
		return false
	}
	return o.Success
}

func (o *RatelimitLimitResponseData) GetOverrideID() *string {
	if o == nil {
		return nil
	}
	return o.OverrideID
}
