// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/unkeyed/sdks/api/go/v2/internal/utils"
)

type V2PermissionsListRolesRequestBody struct {
	// Maximum number of roles to return in a single response.
	// Use smaller values for faster response times and better UI performance.
	// Use larger values when you need to process many roles efficiently.
	// Results exceeding this limit will be paginated with a cursor for continuation.
	//
	Limit *int64 `default:"100" json:"limit"`
	// Pagination cursor from a previous response to fetch the next page of roles.
	// Include this when you need to retrieve additional roles beyond the first page.
	// Each response containing more results will include a cursor value that can be used here.
	// Leave empty or omit this field to start from the beginning of the role list.
	//
	Cursor *string `json:"cursor,omitempty"`
}

func (v V2PermissionsListRolesRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2PermissionsListRolesRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V2PermissionsListRolesRequestBody) GetLimit() *int64 {
	if v == nil {
		return nil
	}
	return v.Limit
}

func (v *V2PermissionsListRolesRequestBody) GetCursor() *string {
	if v == nil {
		return nil
	}
	return v.Cursor
}
