// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Operation - Defines how to modify the key's remaining credits. Use 'set' to replace current credits with a specific value or unlimited usage, 'increment' to add credits for plan upgrades or credit purchases, and 'decrement' to reduce credits for refunds or policy violations.
type Operation string

const (
	OperationSet       Operation = "set"
	OperationIncrement Operation = "increment"
	OperationDecrement Operation = "decrement"
)

func (e Operation) ToPointer() *Operation {
	return &e
}
func (e *Operation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "set":
		fallthrough
	case "increment":
		fallthrough
	case "decrement":
		*e = Operation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Operation: %v", v)
	}
}

type V2KeysUpdateCreditsRequestBody struct {
	// The ID of the key to update (begins with `key_`). This is the database reference ID for the key, not the actual API key string that users authenticate with. This ID uniquely identifies which key's credits will be updated.
	KeyID string `json:"keyId"`
	// The credit value to use with the specified operation. The meaning depends on the operation: for 'set', this becomes the new remaining credits value; for 'increment', this amount is added to current credits; for 'decrement', this amount is subtracted from current credits.
	//
	// Set to null when using 'set' operation to make the key unlimited (removes usage restrictions entirely). When decrementing, if the result would be negative, remaining credits are automatically set to zero. Credits are consumed during successful key verification, and when credits reach zero, verification fails with `code=INSUFFICIENT_CREDITS`.
	//
	// Required when using 'increment' or 'decrement' operations. Optional for 'set' operation (null creates unlimited usage).
	//
	Value *int64 `json:"value,omitempty"`
	// Defines how to modify the key's remaining credits. Use 'set' to replace current credits with a specific value or unlimited usage, 'increment' to add credits for plan upgrades or credit purchases, and 'decrement' to reduce credits for refunds or policy violations.
	//
	Operation Operation `json:"operation"`
}

func (v *V2KeysUpdateCreditsRequestBody) GetKeyID() string {
	if v == nil {
		return ""
	}
	return v.KeyID
}

func (v *V2KeysUpdateCreditsRequestBody) GetValue() *int64 {
	if v == nil {
		return nil
	}
	return v.Value
}

func (v *V2KeysUpdateCreditsRequestBody) GetOperation() Operation {
	if v == nil {
		return Operation("")
	}
	return v.Operation
}
