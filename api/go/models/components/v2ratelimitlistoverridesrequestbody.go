// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/unkeyed/sdks/api/go/v2/internal/utils"
)

type V2RatelimitListOverridesRequestBody struct {
	// The id or name of the rate limit namespace to list overrides for.
	Namespace string `json:"namespace"`
	// Pagination cursor from a previous response. Include this when fetching subsequent pages of results. Each response containing more results than the requested limit will include a cursor value in the pagination object that can be used here.
	Cursor *string `json:"cursor,omitempty"`
	// Maximum number of override entries to return in a single response. Use this to control response size and loading performance.
	//
	// - Lower values (10-20): Better for UI displays and faster response times
	// - Higher values (50-100): Better for data exports or bulk operations
	// - Default (10): Suitable for most dashboard views
	//
	// Results exceeding this limit will be paginated, with a cursor provided for fetching subsequent pages.
	Limit *int64 `default:"10" json:"limit"`
}

func (v V2RatelimitListOverridesRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2RatelimitListOverridesRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"namespace"}); err != nil {
		return err
	}
	return nil
}

func (o *V2RatelimitListOverridesRequestBody) GetNamespace() string {
	if o == nil {
		return ""
	}
	return o.Namespace
}

func (o *V2RatelimitListOverridesRequestBody) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *V2RatelimitListOverridesRequestBody) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}
