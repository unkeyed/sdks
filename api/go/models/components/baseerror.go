// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// BaseError - Base error structure following Problem Details for HTTP APIs (RFC 7807). This provides a standardized way to carry machine-readable details of errors in HTTP response content.
type BaseError struct {
	// A human-readable explanation specific to this occurrence of the problem. This provides detailed information about what went wrong and potential remediation steps. The message is intended to be helpful for developers troubleshooting the issue.
	Detail string `json:"detail"`
	// HTTP status code that corresponds to this error. This will match the status code in the HTTP response. Common codes include `400` (Bad Request), `401` (Unauthorized), `403` (Forbidden), `404` (Not Found), `409` (Conflict), and `500` (Internal Server Error).
	Status int64 `json:"status"`
	// A short, human-readable summary of the problem type. This remains constant from occurrence to occurrence of the same problem and should be used for programmatic handling.
	Title string `json:"title"`
	// A URI reference that identifies the problem type. This provides a stable identifier for the error that can be used for documentation lookups and programmatic error handling. When followed, this URI should provide human-readable documentation for the problem type.
	Type string `json:"type"`
}

func (b *BaseError) GetDetail() string {
	if b == nil {
		return ""
	}
	return b.Detail
}

func (b *BaseError) GetStatus() int64 {
	if b == nil {
		return 0
	}
	return b.Status
}

func (b *BaseError) GetTitle() string {
	if b == nil {
		return ""
	}
	return b.Title
}

func (b *BaseError) GetType() string {
	if b == nil {
		return ""
	}
	return b.Type
}
