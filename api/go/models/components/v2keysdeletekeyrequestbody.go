// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/unkeyed/sdks/api/go/v2/internal/utils"
)

type V2KeysDeleteKeyRequestBody struct {
	// Specifies which key to delete using the database identifier returned from `createKey`.
	// Do not confuse this with the actual API key string that users include in requests.
	// Deletion immediately invalidates the key, causing all future verification attempts to fail with `code=NOT_FOUND`.
	// Key deletion triggers cache invalidation across all regions but may take up to 30 seconds to fully propagate.
	//
	KeyID string `json:"keyId"`
	// Controls deletion behavior between recoverable soft-deletion and irreversible permanent erasure.
	// Soft deletion (default) preserves key data for potential recovery through direct database operations.
	// Permanent deletion completely removes all traces including hash values and metadata with no recovery option.
	//
	// Use permanent deletion only for regulatory compliance (GDPR), resolving hash collisions, or when reusing identical key strings.
	// Permanent deletion cannot be undone and may affect analytics data that references the deleted key.
	// Most applications should use soft deletion to maintain audit trails and prevent accidental data loss.
	//
	Permanent *bool `default:"false" json:"permanent"`
}

func (v V2KeysDeleteKeyRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2KeysDeleteKeyRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"keyId"}); err != nil {
		return err
	}
	return nil
}

func (o *V2KeysDeleteKeyRequestBody) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

func (o *V2KeysDeleteKeyRequestBody) GetPermanent() *bool {
	if o == nil {
		return nil
	}
	return o.Permanent
}
