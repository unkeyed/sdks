// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/unkeyed/sdks/api/go/v2/internal/utils"
)

type V2KeysGetKeyRequestBody struct {
	// Specifies which key to retrieve using the database identifier returned from `keys.createKey`.
	// Do not confuse this with the actual API key string that users include in requests.
	// Key data includes metadata, permissions, usage statistics, and configuration but never the plaintext key value unless `decrypt=true`.
	// Find this ID in creation responses, key listings, dashboard, or verification responses.
	//
	KeyID string `json:"keyId"`
	// Controls whether to include the plaintext key value in the response for recovery purposes.
	// Only works for keys created with `recoverable=true` and requires the `decrypt_key` permission.
	// Returned keys must be handled securely, never logged, cached, or stored insecurely.
	//
	// Use only for legitimate recovery scenarios like user password resets or emergency access.
	// Most applications should keep this false to maintain security best practices and avoid accidental key exposure.
	// Decryption requests are audited and may trigger security alerts in enterprise environments.
	//
	Decrypt *bool `default:"false" json:"decrypt"`
}

func (v V2KeysGetKeyRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2KeysGetKeyRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"keyId"}); err != nil {
		return err
	}
	return nil
}

func (v *V2KeysGetKeyRequestBody) GetKeyID() string {
	if v == nil {
		return ""
	}
	return v.KeyID
}

func (v *V2KeysGetKeyRequestBody) GetDecrypt() *bool {
	if v == nil {
		return nil
	}
	return v.Decrypt
}
