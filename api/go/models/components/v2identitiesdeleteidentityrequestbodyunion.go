// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/unkeyed/sdks/go/api/v2/internal/utils"
)

type V2IdentitiesDeleteIdentityRequestBody2 struct {
	// The id of this identity in your system.
	//
	// This usually comes from your authentication provider and could be a userId, organisationId or even an email.
	// It does not matter what you use, as long as it uniquely identifies something in your application.
	//
	ExternalID *string `json:"externalId,omitempty"`
	// The Unkey Identity ID.
	IdentityID string `json:"identityId"`
}

func (o *V2IdentitiesDeleteIdentityRequestBody2) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *V2IdentitiesDeleteIdentityRequestBody2) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

type V2IdentitiesDeleteIdentityRequestBody1 struct {
	// The id of this identity in your system.
	//
	// This usually comes from your authentication provider and could be a userId, organisationId or even an email.
	// It does not matter what you use, as long as it uniquely identifies something in your application.
	//
	ExternalID string `json:"externalId"`
	// The Unkey Identity ID.
	IdentityID *string `json:"identityId,omitempty"`
}

func (o *V2IdentitiesDeleteIdentityRequestBody1) GetExternalID() string {
	if o == nil {
		return ""
	}
	return o.ExternalID
}

func (o *V2IdentitiesDeleteIdentityRequestBody1) GetIdentityID() *string {
	if o == nil {
		return nil
	}
	return o.IdentityID
}

type V2IdentitiesDeleteIdentityRequestBodyUnionType string

const (
	V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody1 V2IdentitiesDeleteIdentityRequestBodyUnionType = "V2IdentitiesDeleteIdentityRequestBody_1"
	V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody2 V2IdentitiesDeleteIdentityRequestBodyUnionType = "V2IdentitiesDeleteIdentityRequestBody_2"
)

type V2IdentitiesDeleteIdentityRequestBodyUnion struct {
	V2IdentitiesDeleteIdentityRequestBody1 *V2IdentitiesDeleteIdentityRequestBody1 `queryParam:"inline"`
	V2IdentitiesDeleteIdentityRequestBody2 *V2IdentitiesDeleteIdentityRequestBody2 `queryParam:"inline"`

	Type V2IdentitiesDeleteIdentityRequestBodyUnionType
}

func CreateV2IdentitiesDeleteIdentityRequestBodyUnionV2IdentitiesDeleteIdentityRequestBody1(v2IdentitiesDeleteIdentityRequestBody1 V2IdentitiesDeleteIdentityRequestBody1) V2IdentitiesDeleteIdentityRequestBodyUnion {
	typ := V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody1

	return V2IdentitiesDeleteIdentityRequestBodyUnion{
		V2IdentitiesDeleteIdentityRequestBody1: &v2IdentitiesDeleteIdentityRequestBody1,
		Type:                                   typ,
	}
}

func CreateV2IdentitiesDeleteIdentityRequestBodyUnionV2IdentitiesDeleteIdentityRequestBody2(v2IdentitiesDeleteIdentityRequestBody2 V2IdentitiesDeleteIdentityRequestBody2) V2IdentitiesDeleteIdentityRequestBodyUnion {
	typ := V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody2

	return V2IdentitiesDeleteIdentityRequestBodyUnion{
		V2IdentitiesDeleteIdentityRequestBody2: &v2IdentitiesDeleteIdentityRequestBody2,
		Type:                                   typ,
	}
}

func (u *V2IdentitiesDeleteIdentityRequestBodyUnion) UnmarshalJSON(data []byte) error {

	var v2IdentitiesDeleteIdentityRequestBody1 V2IdentitiesDeleteIdentityRequestBody1 = V2IdentitiesDeleteIdentityRequestBody1{}
	if err := utils.UnmarshalJSON(data, &v2IdentitiesDeleteIdentityRequestBody1, "", true, true); err == nil {
		u.V2IdentitiesDeleteIdentityRequestBody1 = &v2IdentitiesDeleteIdentityRequestBody1
		u.Type = V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody1
		return nil
	}

	var v2IdentitiesDeleteIdentityRequestBody2 V2IdentitiesDeleteIdentityRequestBody2 = V2IdentitiesDeleteIdentityRequestBody2{}
	if err := utils.UnmarshalJSON(data, &v2IdentitiesDeleteIdentityRequestBody2, "", true, true); err == nil {
		u.V2IdentitiesDeleteIdentityRequestBody2 = &v2IdentitiesDeleteIdentityRequestBody2
		u.Type = V2IdentitiesDeleteIdentityRequestBodyUnionTypeV2IdentitiesDeleteIdentityRequestBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for V2IdentitiesDeleteIdentityRequestBodyUnion", string(data))
}

func (u V2IdentitiesDeleteIdentityRequestBodyUnion) MarshalJSON() ([]byte, error) {
	if u.V2IdentitiesDeleteIdentityRequestBody1 != nil {
		return utils.MarshalJSON(u.V2IdentitiesDeleteIdentityRequestBody1, "", true)
	}

	if u.V2IdentitiesDeleteIdentityRequestBody2 != nil {
		return utils.MarshalJSON(u.V2IdentitiesDeleteIdentityRequestBody2, "", true)
	}

	return nil, errors.New("could not marshal union type V2IdentitiesDeleteIdentityRequestBodyUnion: all fields are null")
}
